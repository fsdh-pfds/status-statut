#
# ===============================
# Do not edit this file directly!
# ===============================
#
# Your changes will be overwritten when the Upptime template updates (by default, weekly)
# Instead, change .upptimerc.yml configuration and the workflows will be generated accordingly.
#
# üîº Upptime @v1.39.0
# GitHub-powered open-source uptime monitor and status page by Anand Chowdhary

# * Source: https://github.com/upptime/upptime
# * Docs and more: https://upptime.js.org
# * More by Anand Chowdhary: https://anandchowdhary.com


name: Uptime CI
on:
  schedule:
    - cron: "*/5 * * * *"
  repository_dispatch:
    types: [uptime]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Check status
    runs-on: ubuntu-latest
    steps:
      - name: Create App token
        id: create_token
        uses: fsdh-pfds/.github/.github/actions/create-app-token@main
        with:
          app-id: ${{ vars.FSDH_UPPTIME_BOT_APP_ID }}
          private-key: ${{ secrets.FSDH_UPPTIME_BOT_APP_KEY }}
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.head_ref }}
          token: ${{ steps.create_token.outputs.token }}
          
      - name: Get runner public IP
        id: runner_ip
        continue-on-error: true 
        run: |
          # try a list of reliable ‚Äúwhat‚Äôs my IP‚Äù endpoints
          services=(
            "https://api.ipify.org"
            "https://ifconfig.me/ip"
            "https://icanhazip.com"
            "https://checkip.amazonaws.com"
          )
          ip=""
          for svc in "${services[@]}"; do
            ip=$(curl -fs "$svc") && break   # -f fails on HTTP errors, -s silences progress
          done
          ip=${ip:-"unknown"}                # fallback if all of them fail
          echo "Runner public IP: $ip"
          
      - name: Check endpoint status
        uses: upptime/uptime-monitor@e620a0d7a97526a295bbe3970495bff6495bdf27 # v1.41.0
        with:
          command: "update"
        env:
          GH_PAT: ${{ steps.create_token.outputs.token }}
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
